# The configurations that used for the recording, feel free to edit them
config:

  # Specify a command to be executed
  # like `/bin/bash -l`, `ls`, or any other commands
  # the default is bash for Linux
  # or powershell.exe for Windows
  command: bash -l
  
  # Specify the current working directory path
  # the default is the current working directory path
  cwd: /home/vcx
  
  # Export additional ENV variables
  env:
    recording: true
  
  # Explicitly set the number of columns
  # or use `auto` to take the current
  # number of columns of your shell
  cols: 80
  
  # Explicitly set the number of rows
  # or use `auto` to take the current
  # number of rows of your shell
  rows: 24
  
  # Amount of times to repeat GIF
  # If value is -1, play once
  # If value is 0, loop indefinitely
  # If value is a positive number, loop n times
  repeat: 0
  
  # Quality
  # 1 - 100
  quality: 100
  
  # Delay between frames in ms
  # If the value is `auto` use the actual recording delays
  frameDelay: auto
  
  # Maximum delay between frames in ms
  # Ignored if the `frameDelay` isn't set to `auto`
  # Set to `auto` to prevent limiting the max idle time
  maxIdleTime: 2000
  
  # The surrounding frame box
  # The `type` can be null, window, floating, or solid`
  # To hide the title use the value null
  # Don't forget to add a backgroundColor style with a null as type
  frameBox:
    type: floating
    title: Terminalizer
    style:
      border: 0px black solid
      # boxShadow: none
      # margin: 0px
  
  # Add a watermark image to the rendered gif
  # You need to specify an absolute path for
  # the image on your machine or a URL, and you can also
  # add your own CSS styles
  watermark:
    imagePath: null
    style:
      position: absolute
      right: 15px
      bottom: 15px
      width: 100px
      opacity: 0.9
  
  # Cursor style can be one of
  # `block`, `underline`, or `bar`
  cursorStyle: block
  
  # Font family
  # You can use any font that is installed on your machine
  # in CSS-like syntax
  fontFamily: "Monaco, Lucida Console, Ubuntu Mono, Monospace"
  
  # The size of the font
  fontSize: 12
  
  # The height of lines
  lineHeight: 1
  
  # The spacing between letters
  letterSpacing: 0
  
  # Theme
  theme:
    background: "transparent"
    foreground: "#afafaf"
    cursor: "#c7c7c7"
    black: "#232628"
    red: "#fc4384"
    green: "#b3e33b"
    yellow: "#ffa727"
    blue: "#75dff2"
    magenta: "#ae89fe"
    cyan: "#708387"
    white: "#d5d5d0"
    brightBlack: "#626566"
    brightRed: "#ff7fac"
    brightGreen: "#c8ed71"
    brightYellow: "#ebdf86"
    brightBlue: "#75dff2"
    brightMagenta: "#ae89fe"
    brightCyan: "#b1c6ca"
    brightWhite: "#f9f9f4"
  
# Records, feel free to edit them
records:
  - delay: 4528
    content: "\e]0;vcx@vcx-BM6660-BM6360:~\a\e]7;file://vcx-BM6660-BM6360/home/vcx\a\e]0;vcx@vcx-BM6660-BM6360: ~\a\e[01;32mvcx@vcx-BM6660-BM6360\e[00m:\e[01;34m~\e[00m$ "
  - delay: 1603
    content: s
  - delay: 204
    content: u
  - delay: 201
    content: d
  - delay: 203
    content: o
  - delay: 62
    content: ' '
  - delay: 3648
    content: "kubeadm join 140.116.247.67:6443 --token p3kx43.fg0\r0tzz765aiyjmpx     --discovery-token-ca-cert-hash sha256:3b7bd198b515ab1288cfa96a\ra0c8b31a1a05dd63cc1b806e78f8b983f338b9c0a"
  - delay: 1836
    content: "\r\n"
  - delay: 103
    content: '[sudo] password for vcx: '
  - delay: 3752
    content: "\r\n"
  - delay: 720
    content: "[preflight] Running pre-flight checks\r\n"
  - delay: 4936
    content: "[preflight] Reading configuration from the cluster...\r\n[preflight] FYI: You can look at this config file with 'kubectl -n kube-system get cm kubeadm-config -oyaml'\r\n"
  - delay: 15
    content: "W0610 14:35:07.389796   28408 kubelet.go:200] cannot automatically set CgroupDriver when starting the Kubelet: cannot execute 'docker info -f {{.CgroupDriver}}': executable file not found in $PATH\r\n"
  - delay: 183
    content: "[kubelet-start] Writing kubelet configuration to file \"/var/lib/kubelet/config.yaml\"\r\n"
  - delay: 13
    content: "[kubelet-start] Writing kubelet environment file with flags to file \"/var/lib/kubelet/kubeadm-flags.env\"\r\n[kubelet-start] Starting the kubelet\r\n"
  - delay: 185
    content: "[kubelet-start] Waiting for the kubelet to perform the TLS Bootstrap...\r\n"
  - delay: 12680
    content: "\r\nThis node has joined the cluster:\r\n* Certificate signing request was sent to apiserver and a response was received.\r\n* The Kubelet was informed of the new secure connection details.\r\n\r\nRun 'kubectl get nodes' on the control-plane to see this node join the cluster.\r\n\r\n\e]0;vcx@vcx-BM6660-BM6360:~\a\e]7;file://vcx-BM6660-BM6360/home/vcx\a\e]0;vcx@vcx-BM6660-BM6360: ~\a\e[01;32mvcx@vcx-BM6660-BM6360\e[00m:\e[01;34m~\e[00m$ "
  - delay: 3263
    content: "logout\r\n"
